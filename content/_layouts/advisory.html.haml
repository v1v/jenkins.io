---
section: security
notitle: true
---

:ruby
  require 'asciidoctor'

  plugins = page.issues.collect { |issue| issue.plugins }.flatten.uniq.keep_if { |p| p }.sort { |x,y| (site._generated[:update_center].plugins[x.name]&.title&.downcase || x.name&.downcase) <=> (site._generated[:update_center].plugins[y.name]&.title&.downcase || y.name&.downcase) }
  credits = page.issues.reduce({}) do |issues, issue|
    if issue.has_key?("reporter")
      if !issues.has_key?(issue.reporter)
        issues[issue.reporter] = []
      end
      if !issues[issue.reporter].include?(issue.id)
        issues[issue.reporter] << issue.id
      end
    end
    issues
  end
  credits = credits.sort_by { |k,v| k }

  versions = page.issues.collect { |issue| issue.plugins }.flatten

  fixed_plugins = plugins.dup.keep_if { |p| p.fixed }
  unfixed_plugins = plugins.dup.keep_if { |p| !p.fixed }

  # Helps to either use CJT or CJD
  isCJD = false
  if page.rolling&.empty?
    rolling = ""
    major_rolling = "2"
  else
    rolling = page.rolling
    major_rolling = page.rolling.split(".")[0]
    minor_rolling = page.rolling.split(".")[1]
    cb_rolling = page.rolling.split(".")[2]
    # First release for CJD started from 2.150.3.2
    if major_rolling.to_i >= 2 && minor_rolling.to_i >= 150
      isCJD = true
      if minor_rolling.to_i == 150 && cb_rolling.to_i <= 2
        isCJD = false
      end
    end
  end

  if page.fixed.nil? || page.fixed.empty?
    fixed_1 = false
    fixed_2 = false
  else
    fixed_1 = page.fixed.split(",")[0]
    major_fixed_1 = fixed_1.split(".")[0]
    minor_fixed_1 = fixed_1.split(".")[1]
    if page.fixed.split(",").size > 1
      fixed_2 = page.fixed.split(",")[1]
      major_fixed_2 = fixed_2.split(".")[0]
      minor_fixed_2 = fixed_2.split(".")[1]
    end
  end

%h1<
  = page.title.gsub('Jenkins', 'CloudBees')

%p<
  This advisory announces vulnerabilities in
  %strong<
    Jenkins, CloudBees Jenkins Distribution, CloudBees Jenkins Platform and CloudBees Core.

- described_issues = page.issues.dup.keep_if { |i| i.title && i.description }
- if described_issues.size > 0
  - described_issues.each do | issue |
    %h3{:id => issue.id}<
      = issue.title
    %strong<
        = issue.id
    = Asciidoctor.convert issue.description, safe: :safe
- else
  - # If there is any content, it's the issue descriptions -- but only show if there are none in the data
  = content
  %p

%p
%h4<
  Severity

%ul
  - page.issues.dup.sort { |x,y| x.id.split("-")[1].to_i <=> y.id.split("-")[1].to_i }.each do | issue |
    %li<
      = "#{issue.id}:"
      - if issue.cvss.vector.start_with? "CVSS:3.0"
        %a{ :href => 'http://www.first.org/cvss/calculator/3.0#' + issue.cvss.vector }<
          = issue.cvss.severity
      - else
        = issue.cvss.severity
%p
%h4<
  Fix
- if fixed_plugins.length > 0 || page.core&.weekly&.fixed || page.core&.lts&.fixed
  %ul
    %li<
      %strong<
        CloudBees Traditional Platforms
      &nbsp;should be upgraded #{rolling}
    %li<
      %strong<
        CloudBees Cloud Platforms
      &nbsp;should be upgraded #{rolling}
    %li<
      %strong<
        CloudBees Jenkins Enterprise
      &nbsp;should be upgraded the Managed Masters and Operations Center to #{rolling}
    %li<
      %strong<
        CloudBees Jenkins Platform
      &nbsp;(rolling train, CJP Operations Center and CJP Client Master (#{major_rolling}.x.y.z) should be upgraded to version #{rolling}
    - if fixed_1
      %li<
        %strong<
          CloudBees Jenkins Platform
        &nbsp;(fixed train, CJP Operations Center and CJP Client Master (#{major_fixed_1}.#{minor_fixed_1}.x.0.z) should be upgraded to version #{fixed_1}
    - if fixed_2
      %li<
        %strong<
          CloudBees Jenkins Platform
        &nbsp;(fixed train, CJP Operations Center and CJP Client Master (#{major_fixed_2}.#{minor_fixed_2}.x.0.z) should be upgraded to version #{fixed_2}
    %li<
      %strong<
        - if isCJD
          CloudBees Jenkins Distribution
        - else
          CloudBees Jenkins Team
      &nbsp;should be upgraded to version #{rolling}
    - if page.core&.weekly&.fixed || page.core&.lts&.fixed
      - if page.core&.weekly&.fixed
        %li<
          %strong<
            Jenkins weekly
          &nbsp;should be updated to version #{page.core.weekly&.fixed}
      - if page.core&.lts&.fixed
        %li<
          %strong<
            Jenkins LTS
          &nbsp;should be updated to version #{page.core.lts&.fixed}

- if unfixed_plugins.length > 0
  %p<
    As of publication of this advisory, no fixes are available for the following plugins:
  %ul
    - unfixed_plugins.each do | plugin |
      %li<
        = site._generated[:update_center].plugins[plugin.name]&.title || plugin.title || plugin.name
        Plugin


- if page.resources && page.resources.length > 0
  %h4<
    Other Resources

  %ul
    - page.resources.each do | resource |
      %li<
        %a{:href => resource.url}<
          = resource.title
